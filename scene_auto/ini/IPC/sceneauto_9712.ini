[common]
IspDev = 0
ViDev = 0
ViChn = 0
VpssGrp = 0
VpssChn = 0
VencGrp = 0
VencChn = 0

IVE_Enable = 0;

HLC_AutoEnable = 0;
HLC_thr_off = 140000		;强光场景关闭阈值	参数未测
HLC_thr_on = 150000		;强光场景打开阈值
HLC_tolerance = 3000		;
HLC_expthr = 6000
HLC_count = 5

;DIS打开的亮度差门限
ave_lum_thresh = 30
;DIS打开的曝光差门限
delta_dis_expthresh = 20
;去雾打开时,DCI强度与去雾强度联动查找表
dci_strength_lut = 32,33,33,34,34,35,35,36,37,37,38,38,39,39,40,40,41,42,42,43,43,44,44,45,46,46,47,47,48,48,49,49,50,50,50,49,49,49,49,48,48,48,48,48,47,47,47,47,46,46,46,46,46,45,45,45,45,44,44,44,44,43,43,43,43,43,42,42,42,42,41,41,41,41,41,40,40,40,40,39,39,39,39,39,38,38,38,38,37,37,37,37,37,36,36,36,36,35,35,35,35,34,34,34,34,34,33,33,33,33,32  

exposure_thr_indoor = 10000		;后续去掉
exposure_thr_outdoor = 100

fpn_exp_thresh = 2000000000		;fpn打开阈值，34220sensor不需要

;DRC强度门限,用于线性模式下打开DRC时对曝光量进行换算
u32DRCStrengthThresh = 48

[AE]
aeRunInterval = 2
aeBitrateCount = 3		;码率等级个数
aeBitrateThresh = 2048|8120|16318|		;码率等级阈值

;speed,tolerance,BlackDelayFrame,WhiteDelayFrame根据码率等级联动
u8Speed_0 = 64
u8Tolerance_0 = 2
u16BlackDelayFrame_0 = 25
u16WhiteDelayFrame_0 = 15
u32SysGainMax_0 = 8192000

u8Speed_1 = 64
u8Tolerance_1 = 2
u16BlackDelayFrame_1 = 15
u16WhiteDelayFrame_1 = 10
u32SysGainMax_1 = 8192000

u8Speed_2 = 64
u8Tolerance_2 = 2
u16BlackDelayFrame_2 = 5
u16WhiteDelayFrame_2 = 5
u32SysGainMax_2 = 8192000

u8Speed_3 = 64
u8Tolerance_3 = 2
u16BlackDelayFrame_3 = 5
u16WhiteDelayFrame_3 = 5
u32SysGainMax_3 = 8192000

u8Speed_4 = 64
u8Tolerance_4 = 2
u16BlackDelayFrame_4 = 0
u16WhiteDelayFrame_4 = 0
u32SysGainMax_2 = 8192000

aeExpCount = 5			;曝光等级个数
aeExpDtoLThresh = 6000|30000|240000|800000|8000000| 	;曝光等级暗到亮阈值
aeExpLtoDThresh = 8000|40000|300000|1000000|10000000|	;曝光等级亮到暗阈值

;Compesation，HistOffset根据曝光等级联动
aeCompesation = 64|64|64|56|56|
aeHistOffset = 12|12|20|20|20|

[sharpen]
IsoThresh = 200  ;
ExpCount = 2     ;曝光时间等级个数
ExpThresh = 2000|10000      ;曝光时间等级阈值

abEnLowLumaShoot_0 = 0|0|0|0|0|1|1|1|1|1|1|1|1|1|1|1     ;                  
SharpenD_0  = 90|75|75|80|85|90|95|100|90|95|95|95|95|95|95|95   ;       
SharpenUd_0 = 50|50|50|70|90|95|95|90|75|80|80|80|80|80|80|80    ;     
TextureNoiseThd_0 = 0|2|4|6|6|12|24|30|80|0|0|0|0|0|0|0   ;                 
EdgeNoiseThd_0 = 2|4|8|16|25|11|12|0|0|0|0|0|0|0|0|0     ;                  
overshoot_0  = 130|140|140|135|115|115|115|100|100|95|95|95|95|95|95|95    ;  
undershoot_0 = 220|210|210|190|170|150|130|110|100|95|95|95|95|95|95|95    ;  

abEnLowLumaShoot_1 = 0|0|0|0|0|1|1|1|1|1|1|1|1|1|1|1     ;                  
SharpenD_1  = 90|75|75|80|85|90|95|100|90|95|95|95|95|95|95|95   ;       
SharpenUd_1 = 50|50|50|70|90|95|95|90|75|80|80|80|80|80|80|80    ;     
TextureNoiseThd_1 = 0|2|4|6|6|12|24|30|80|0|0|0|0|0|0|0   ;                 
EdgeNoiseThd_1 = 2|4|8|16|25|11|12|0|0|0|0|0|0|0|0|0     ;                  
overshoot_1  = 130|140|140|135|115|115|115|100|100|95|95|95|95|95|95|95    ;  
undershoot_1 = 220|210|210|190|170|150|130|110|100|95|95|95|95|95|95|95    ;  


[gamma]                  ;完全一致
DelayCount =1
Interval = 10
ExpCount = 3
ExpThreshLtoD = 4000000|8000000|80000000
ExpThreshDtoL = 3000000|6000000|60000000

gamma.0_0 = 0,120,220,310,390,470,540,610,670,730,786,842,894,944,994,1050,1096,1138,1178,1218,1254,1280,1314,1346,1378,1408,1438,1467,1493,1519,1543,1568,1592,1615,1638,1661,1683,1705,1726,1748,1769,1789,1810,1830,1849,1869,1888,1907,1926,1945,1963,1981,1999,2017,2034,2052,2069,2086,2102,2119,2136,2152,2168,2184,2200,2216,2231,2247,2262,2277,2292,2307,2322,2337,2351,2366,2380,2394,2408,2422,2436,2450,2464,2477,2491,2504,2518,2531,2544,2557,2570,
gamma.1_0 = 2583,2596,2609,2621,2634,2646,2659,2671,2683,2696,2708,2720,2732,2744,2756,2767,2779,2791,2802,2814,2825,2837,2848,2859,2871,2882,2893,2904,2915,2926,2937,2948,2959,2969,2980,2991,3001,3012,3023,3033,3043,3054,3064,3074,3085,3095,3105,3115,3125,3135,3145,3155,3165,3175,3185,3194,3204,3214,3224,3233,3243,3252,3262,3271,3281,3290,3300,3309,3318,3327,3337,3346,3355,3364,3373,3382,3391,3400,3409,3418,3427,3436,3445,3454,3463,3471,3480,3489,
gamma.2_0 = 3498,3506,3515,3523,3532,3540,3549,3557,3566,3574,3583,3591,3600,3608,3616,3624,3633,3641,3649,3657,3665,3674,3682,3690,3698,3706,3714,3722,3730,3738,3746,3754,3762,3769,3777,3785,3793,3801,3808,3816,3824,3832,3839,3847,3855,3862,3870,3877,3885,3892,3900,3907,3915,3922,3930,3937,3945,3952,3959,3967,3974,3981,3989,3996,4003,4010,4018,4025,4032,4039,4046,4054,4061,4068,4075,4082,4089,4095,

gamma.0_1 = 0,147,223,284,338,386,431,472,512,549,585,620,653,685,716,746,776,805,833,860,887,913,939,965,990,1014,1038,1062,1085,1109,1131,1154,1176,1198,1220,1241,1262,1283,1304,1324,1344,1365,1384,1404,1424,1443,1462,1481,1500,1519,1537,1555,1574,1592,1610,1628,1645,1663,1680,1698,1715,1732,1749,1766,1782,1799,1816,1832,1848,1865,1881,1897,1913,1929,1945,1960,1976,1992,2007,2022,2038,2053,2068,2083,2098,2113,2128,2143,2158,2172,2187,2202,
gamma.1_1 = 2216,2230,2245,2259,2273,2288,2302,2316,2330,2344,2358,2371,2385,2399,2413,2426,2440,2453,2467,2480,2494,2507,2520,2534,2547,2560,2573,2586,2599,2612,2625,2638,2651,2664,2676,2689,2702,2714,2727,2740,2752,2765,2777,2789,2802,2814,2826,2839,2851,2863,2875,2887,2900,2912,2924,2936,2948,2960,2971,2983,2995,3007,3019,3030,3042,3054,3066,3077,3089,3100,3112,3123,3135,3146,3158,3169,3181,3192,3203,3214,3226,3237,3248,3259,3271,3282,3293,
gamma.2_1 = 3304,3315,3326,3337,3348,3359,3370,3381,3392,3403,3413,3424,3435,3446,3457,3467,3478,3489,3499,3510,3521,3531,3542,3552,3563,3573,3584,3594,3605,3615,3626,3636,3647,3657,3667,3678,3688,3698,3708,3719,3729,3739,3749,3759,3770,3780,3790,3800,3810,3820,3830,3840,3850,3860,3870,3880,3890,3900,3910,3920,3930,3939,3949,3959,3969,3979,3989,3998,4008,4018,4027,4037,4047,4056,4066,4076,4085,4095,

gamma.0_2 = 0,111,175,228,274,317,357,395,430,465,498,529,560,590,619,648,675,703,729,755,781,806,831,855,879,903,926,949,972,994,1016,1038,1060,1081,1102,1123,1144,1165,1185,1205,1225,1245,1265,1284,1304,1323,1342,1361,1379,1398,1417,1435,1453,1471,1489,1507,1525,1542,1560,1577,1595,1612,1629,1646,1663,1680,1697,1713,1730,1746,1763,1779,1795,1812,1828,1844,1860,1875,1891,1907,1923,1938,1954,1969,1985,2000,2015,2030,2046,2061,2076,2091,2106,2120,2135,2150,
gamma.1_2 = 2165,2179,2194,2208,2223,2237,2252,2266,2280,2294,2309,2323,2337,2351,2365,2379,2393,2407,2420,2434,2448,2462,2475,2489,2502,2516,2529,2543,2556,2570,2583,2596,2610,2623,2636,2649,2662,2675,2689,2702,2715,2728,2740,2753,2766,2779,2792,2805,2817,2830,2843,2855,2868,2881,2893,2906,2918,2931,2943,2955,2968,2980,2992,3005,3017,3029,3041,3054,3066,3078,3090,3102,3114,3126,3138,3150,3162,3174,3186,3198,3210,3222,3233,3245,3257,3269,3281,3292,3304,3316,
gamma.2_2 = 3327,3339,3350,3362,3374,3385,3397,3408,3420,3431,3442,3454,3465,3477,3488,3499,3511,3522,3533,3544,3556,3567,3578,3589,3600,3611,3623,3634,3645,3656,3667,3678,3689,3700,3711,3722,3733,3744,3755,3765,3776,3787,3798,3809,3820,3830,3841,3852,3863,3873,3884,3895,3905,3916,3927,3937,3948,3959,3969,3980,3990,4001,4011,4022,4032,4043,4053,4064,4074,4085,4095,

[ccm]                   ;完全一致
AcmEnable = 0
u16HighColorTempAcmOn = 5120
u16MidColorTempAcmOn = 3633
u16LowColorTempAcmOn = 2465
au16HighCCMAcmOn = 480|32968|32792|32843|399|32836|25|32981|444|
au16MidCCMAcmOn =  463|32936|32807|32882|424|32822|26|33005|467|
au16LowCCMAcmOn =  462|32941|32801|32892|402|32790|34|33020|474|

u16HighColorTempAcmOff = 5120
u16MidColorTempAcmOff = 3633
u16LowColorTempAcmOff = 2465
au16HighCCMAcmOff = 480|32968|32792|32843|399|32836|25|32981|444|
au16MidCCMAcmOff =  463|32936|32807|32882|424|32822|26|33005|467|
au16LowCCMAcmOff =  462|32941|32801|32892|402|32790|34|33020|474|


[h264venc]
vencBitrateCount = 4
vencBitrateThresh = 1025|2049|4097|8145|

chroma_qp_index_offset_0 = 0
disable_deblocking_filter_idc_0 = 2
u32DeltaQP_0 = 0
s32IPQPDelta_0 = 4
slice_alpha_c0_offset_div2_0 = 5
slice_beta_offset_div2_0 = 5
ThreshI_0 = 7|7|7|7|7|9|9|9|12|15|18|25|
ThreshP_0 = 7|7|7|7|7|9|9|9|12|15|18|25|

chroma_qp_index_offset_1 = -6
disable_deblocking_filter_idc_1 = 2
u32DeltaQP_1 = 1
s32IPQPDelta_1 = 4
slice_alpha_c0_offset_div2_1 = 5
slice_beta_offset_div2_1 = 5
ThreshI_1 = 7|7|7|7|7|9|9|9|12|15|18|25|
ThreshP_1 = 7|7|7|7|7|9|9|9|12|15|18|25|

chroma_qp_index_offset_2 = -4
disable_deblocking_filter_idc_2 = 2
u32DeltaQP_2 = 0
s32IPQPDelta_2 = 4
slice_alpha_c0_offset_div2_2 = 1
slice_beta_offset_div2_2 = 1
ThreshI_2 = 7|7|7|7|7|9|9|9|12|15|18|25|
ThreshP_2 = 7|7|7|7|7|9|9|9|12|15|18|25|

chroma_qp_index_offset_3 = 0
disable_deblocking_filter_idc_3 = 1
u32DeltaQP_3 = 0
s32IPQPDelta_3 = 2
slice_alpha_c0_offset_div2_3 = 0
slice_beta_offset_div2_3 = 0
ThreshI_3 = 7|7|7|7|7|9|9|9|12|15|18|25|
ThreshP_3 = 7|7|7|7|7|9|9|9|12|15|18|25|

[h265venc]
vencBitrateCount = 2
vencBitrateThresh = 2048|4098|

ThreshI_0 = 3|3|5|5|8|8|8|15|20|20|25|25|
ThreshP_0 = 3|3|5|5|8|8|8|15|20|20|25|25|
u32RowQpDelta_0 = 1
s32IPQPDelta_0 = 1

ThreshI_1 = 3|3|5|5|8|8|8|15|20|20|25|25|
ThreshP_1 = 3|3|5|5|8|8|8|15|20|20|25|25|
u32RowQpDelta_1 = 1
s32IPQPDelta_1 = 4

;以下参数与码率、曝光量都相关
ExpCount = 2		
ExpThresh = 8000|300000|
;I帧intra模式倾向性选择
u8NormIntra4RdCost_I_0 = 0|0|
u8NormIntra8RdCost_I_0 = 0|0|
u8NormIntra16RdCost_I_0 = 0|0|
u8NormIntra32RdCost_I_0 = 0|0|
u8SkinIntra4RdCost_I_0 = 0|0|
u8SkinIntra8RdCost_I_0 = 0|0|
u8SkinIntra16RdCost_I_0 = 0|2|
u8SkinIntra32RdCost_I_0 = 0|1|
u8HedgeIntra4RdCost_I_0 = 0|0|
u8HedgeIntra8RdCost_I_0 = 4|3|
u8HedgeIntra16RdCost_I_0 = 1|1|
u8HedgeIntra32RdCost_I_0 = 15|15|
;P帧intra模式倾向性选择
u8NormIntra4RdCost_P_0 = 0|0|
u8NormIntra8RdCost_P_0 = 0|0|
u8NormIntra16RdCost_P_0 = 3|0|
u8NormIntra32RdCost_P_0 = 0|0|
u8SkinIntra4RdCost_P_0 = 0|0|
u8SkinIntra8RdCost_P_0 = 0|0|
u8SkinIntra16RdCost_P_0 = 0|2|
u8SkinIntra32RdCost_P_0 = 0|1|
u8HedgeIntra4RdCost_P_0 = 0|0|
u8HedgeIntra8RdCost_P_0 = 4|3|
u8HedgeIntra16RdCost_P_0 = 2|1|
u8HedgeIntra32RdCost_P_0 = 3|15|
;P帧FME模式倾向性选择
u8NormFme8RdCost_P_0 = 0|4|
u8NormFme16RdCost_P_0 = 0|0|
u8NormFme32RdCost_P_0 = 0|0|
u8NormFme64RdCost_P_0 = 0|0|
u8SkinFme8RdCost_P_0 = 0|0|
u8SkinFme16RdCost_P_0 = 0|0|
u8SkinFme32RdCost_P_0 = 4|4|
u8SkinFme64RdCost_P_0 = 2|2|
u8HedgeFme8RdCost_P_0 = 3|4|
u8HedgeFme16RdCost_P_0 = 3|4|
u8HedgeFme32RdCost_P_0 = 3|3|
u8HedgeFme64RdCost_P_0 = 2|2|
;P帧MERGE模式倾向性选择
u8NormMerg8RdCost_P_0 = 0|4|
u8NormMerg16RdCost_P_0 = 0|0|
u8NormMerg32RdCost_P_0 = 0|0|
u8NormMerg64RdCost_P_0 = 0|0|
u8SkinMerg8RdCost_P_0 = 0|0|
u8SkinMerg16RdCost_P_0 = 0|0|
u8SkinMerg32RdCost_P_0 = 4|4|
u8SkinMerg64RdCost_P_0 = 2|2|
u8HedgeMerg8RdCost_P_0 = 3|4|
u8HedgeMerg16RdCost_P_0 = 3|4|
u8HedgeMerg32RdCost_P_0 = 3|3|
u8HedgeMerg64RdCost_P_0 = 2|2|
;I帧肤色算法检测
bSkinEn_I_0 = 0|1|
u32SkinQpDelta_I_0 = 3|3|
u8SkinUMax_I_0 = 100|100|
u8SkinUMin_I_0 = 127|127|
u8SkinVMax_I_0 = 135|135|
u8SkinVMin_I_0 = 160|160|
u32SkinNum_I_0 = 200|200|
;P帧肤色算法检测
bSkinEn_P_0 = 0|1|
u32SkinQpDelta_P_0 = 3|3|
u8SkinUMax_P_0 = 100|100|
u8SkinUMin_P_0 = 127|127|
u8SkinVMax_P_0 = 135|135|
u8SkinVMin_P_0 = 160|160|
u32SkinNum_P_0 = 200|200|
;I帧强边缘检测算法
u8HedgeThr_I_0 = 30|25|
u8HedgeCnt_I_0 = 4|4|
bStroEdgeEn_I_0 = 1|1|
u32StroEdgeQpDelta_I_0 = 1|0|
;P帧强边缘检测算法
u8HedgeThr_P_0 = 30|25|
u8HedgeCnt_P_0 = 4|4|
bStroEdgeEn_P_0 = 1|1|
u32StroEdgeQpDelta_P_0 = 4|4|
;I帧DCT ROUNDING算法
bImproveEn_I_0 = 0|0|
;P帧DCT ROUNDING算法
bImproveEn_P_0 = 1|1|
u32Norm32MaxNum_P_0 = 4|4|
u32Norm16MaxNum_P_0 = 3|3|
u32Norm32ProtectNum_P_0 = 256|256|
u32Norm16ProtectNum_P_0 = 64|64|
u32Skin32MaxNum_P_0 = 8|8|
u32Skin16MaxNum_P_0 = 6|6|
u32Skin32ProtectNum_P_0 = 32|32|
u32Skin16ProtectNum_P_0 = 16|16|
u32Still32MaxNum_P_0 = 8|8|
u32Still16MaxNum_P_0 = 6|6|
u32Still32ProtectNum_P_0 = 64|16|
u32Still16ProtectNum_P_0 = 8|8|
u32Hedge32MaxNum_P_0 = 8|8|
u32Hedge16MaxNum_P_0 = 6|6|
u32Hedge32ProtectNum_P_0 = 32|32|
u32Hedge16ProtectNum_P_0 = 16|16|

;I帧intra模式倾向性选择
u8NormIntra4RdCost_I_1 = 10|0|
u8NormIntra8RdCost_I_1 = 0|0|
u8NormIntra16RdCost_I_1 = 0|0|
u8NormIntra32RdCost_I_1 = 0|0|
u8SkinIntra4RdCost_I_1 = 0|0|
u8SkinIntra8RdCost_I_1 = 0|0|
u8SkinIntra16RdCost_I_1 = 0|2|
u8SkinIntra32RdCost_I_1 = 0|1|
u8HedgeIntra4RdCost_I_1 = 3|0|
u8HedgeIntra8RdCost_I_1 = 0|3|
u8HedgeIntra16RdCost_I_1 = 0|1|
u8HedgeIntra32RdCost_I_1 = 0|15|
;P帧intra模式倾向性选择
u8NormIntra4RdCost_P_1 = 0|0|
u8NormIntra8RdCost_P_1 = 1|0|
u8NormIntra16RdCost_P_1 = 15|0|
u8NormIntra32RdCost_P_1 = 15|0|
u8SkinIntra4RdCost_P_1 = 0|0|
u8SkinIntra8RdCost_P_1 = 0|0|
u8SkinIntra16RdCost_P_1 = 0|2|
u8SkinIntra32RdCost_P_1 = 0|1|
u8HedgeIntra4RdCost_P_1 = 0|0|
u8HedgeIntra8RdCost_P_1 = 1|3|
u8HedgeIntra16RdCost_P_1 = 15|1|
u8HedgeIntra32RdCost_P_1 = 15|15|
;P帧FME模式倾向性选择
u8NormFme8RdCost_P_1 = 4|4|
u8NormFme16RdCost_P_1 = 0|0|
u8NormFme32RdCost_P_1 = 0|0|
u8NormFme64RdCost_P_1 = 0|0|
u8SkinFme8RdCost_P_1 = 0|0|
u8SkinFme16RdCost_P_1 = 0|0|
u8SkinFme32RdCost_P_1 = 4|4|
u8SkinFme64RdCost_P_1 = 2|2|
u8HedgeFme8RdCost_P_1 = 0|4|
u8HedgeFme16RdCost_P_1 = 0|4|
u8HedgeFme32RdCost_P_1 = 1|3|
u8HedgeFme64RdCost_P_1 = 1|2|
;P帧MERGE模式倾向性选择
u8NormMerg8RdCost_P_1 = 4|4|
u8NormMerg16RdCost_P_1 = 0|0|
u8NormMerg32RdCost_P_1 = 0|0|
u8NormMerg64RdCost_P_1 = 0|0|
u8SkinMerg8RdCost_P_1 = 0|0|
u8SkinMerg16RdCost_P_1 = 0|0|
u8SkinMerg32RdCost_P_1 = 4|4|
u8SkinMerg64RdCost_P_1 = 2|2|
u8HedgeMerg8RdCost_P_1 = 0|4|
u8HedgeMerg16RdCost_P_1 = 0|4|
u8HedgeMerg32RdCost_P_1 = 1|3|
u8HedgeMerg64RdCost_P_1 = 1|2|
;I帧肤色算法检测
bSkinEn_I_1 = 0|1|
u32SkinQpDelta_I_1 = 3|3|
u8SkinUMax_I_1 = 100|100|
u8SkinUMin_I_1 = 127|127|
u8SkinVMax_I_1 = 135|135|
u8SkinVMin_I_1 = 160|160|
u32SkinNum_I_1 = 200|200|
;P帧肤色算法检测
bSkinEn_P_1 = 0|1|
u32SkinQpDelta_P_1 = 3|3|
u8SkinUMax_P_1 = 100|100|
u8SkinUMin_P_1 = 127|127|
u8SkinVMax_P_1 = 135|135|
u8SkinVMin_P_1 = 160|160|
u32SkinNum_P_1 = 200|200|
;I帧强边缘检测算法
u8HedgeThr_I_1 = 25|25|
u8HedgeCnt_I_1 = 4|4|
bStroEdgeEn_I_1 = 1|1|
u32StroEdgeQpDelta_I_1 = 0|0|
;P帧强边缘检测算法
u8HedgeThr_P_1 = 25|25|
u8HedgeCnt_P_1 = 4|4|
bStroEdgeEn_P_1 = 1|1|
u32StroEdgeQpDelta_P_1 = 4|4|
;I帧DCT ROUNDING算法
bImproveEn_I_1 = 0|0|
;P帧DCT ROUNDING算法
bImproveEn_P_1 = 1|1|
u32Norm32MaxNum_P_1 = 4|4|
u32Norm16MaxNum_P_1 = 3|3|
u32Norm32ProtectNum_P_1 = 256|256|
u32Norm16ProtectNum_P_1 = 64|64|
u32Skin32MaxNum_P_1 = 8|8|
u32Skin16MaxNum_P_1 = 6|6|
u32Skin32ProtectNum_P_1 = 32|32|
u32Skin16ProtectNum_P_1 = 16|16|
u32Still32MaxNum_P_1 = 8|8|
u32Still16MaxNum_P_1 = 6|6|
u32Still32ProtectNum_P_1 = 16|16|
u32Still16ProtectNum_P_1 = 8|8|
u32Hedge32MaxNum_P_1 = 8|8|
u32Hedge16MaxNum_P_1 = 6|6|
u32Hedge32ProtectNum_P_1 = 32|32|
u32Hedge16ProtectNum_P_1 = 16|16|

[3dnr]
3DnrIsoCount = 9
3DnrIsoThresh = 100|200|400|800|1600|3200|6400|12100|24600|

;ISO = 100
s32YPKStr_0    = 0   
s32YSFStr_0    = 115
s32YTFStr_0    = 72
s32TFStrMax_0  = 13
s32YSFStrDlt_0 = 0
s32YTFStrDlt_0 = 0
s32YTFStrDl_0  = 0
s32YSmthStr_0  = 0
s32YSmthRat_0  = 16
s32YSFBriRat_0 = 24
s32CSFStr_0    = 32
s32CTFstr_0    = 0

;ISO = 200
s32YPKStr_1    = 0
s32YSFStr_1    = 125
s32YTFStr_1    = 78
s32TFStrMax_1  = 13
s32YSFStrDlt_1 = 0
s32YTFStrDlt_1 = 0
s32YTFStrDl_1  = 0
s32YSmthStr_1  = 0
s32YSmthRat_1  = 16
s32YSFBriRat_1 = 36
s32CSFStr_1    = 32
s32CTFstr_1    = 0

;ISO = 400
s32YPKStr_2    = 0
s32YSFStr_2    = 125
s32YTFStr_2    = 86
s32TFStrMax_2  = 13
s32YSFStrDlt_2 = 0
s32YTFStrDlt_2 = 0
s32YTFStrDl_2  = 0
s32YSmthStr_2  = 0
s32YSmthRat_2  = 16
s32YSFBriRat_2 = 36
s32CSFStr_2    = 64
s32CTFstr_2    = 0

;ISO = 800
s32YPKStr_3    = 0
s32YSFStr_3    = 125
s32YTFStr_3    = 86
s32TFStrMax_3  = 13
s32YSFStrDlt_3 = 0
s32YTFStrDlt_3 = 0
s32YTFStrDl_3  = 0
s32YSmthStr_3  = 0
s32YSmthRat_3  = 16
s32YSFBriRat_3 = 36
s32CSFStr_3    = 64
s32CTFstr_3    = 0

;ISO = 1600
s32YPKStr_4    = 0
s32YSFStr_4    = 125
s32YTFStr_4    = 96
s32TFStrMax_4  = 13
s32YSFStrDlt_4 = 0
s32YTFStrDlt_4 = 24
s32YTFStrDl_4  = 0
s32YSmthStr_4  = 0
s32YSmthRat_4  = 16
s32YSFBriRat_4 = 36
s32CSFStr_4    = 64
s32CTFstr_4    = 4

;ISO = 3200
s32YPKStr_5    = 0
s32YSFStr_5    = 125
s32YTFStr_5    = 96
s32TFStrMax_5  = 13
s32YSFStrDlt_5 = 0
s32YTFStrDlt_5 = 24
s32YTFStrDl_5  = 0
s32YSmthStr_5  = 0
s32YSmthRat_5  = 16
s32YSFBriRat_5 = 36
s32CSFStr_5    = 64
s32CTFstr_5    = 8

;ISO = 6400
s32YPKStr_6    = 0
s32YSFStr_6    = 125
s32YTFStr_6    = 96
s32TFStrMax_6  = 13
s32YSFStrDlt_6 = 0
s32YTFStrDlt_6 = 24
s32YTFStrDl_6  = 0
s32YSmthStr_6  = 0
s32YSmthRat_6  = 16
s32YSFBriRat_6 = 36
s32CSFStr_6    = 64
s32CTFstr_6    = 16

;ISO = 12100
s32YPKStr_7    = 0
s32YSFStr_7    = 130
s32YTFStr_7    = 100
s32TFStrMax_7  = 13
s32YSFStrDlt_7 = 8
s32YTFStrDlt_7 = 36
s32YTFStrDl_7  = 12
s32YSmthStr_7  = 0
s32YSmthRat_7  = 16
s32YSFBriRat_7 = 36
s32CSFStr_7    = 64
s32CTFstr_7    = 16

;ISO = 24600
s32YPKStr_8    = 0
s32YSFStr_8    = 135
s32YTFStr_8    = 105
s32TFStrMax_8  = 13
s32YSFStrDlt_8 = 8
s32YTFStrDlt_8 = 48
s32YTFStrDl_8  = 16
s32YSmthStr_8  = 0
s32YSmthRat_8  = 16
s32YSFBriRat_8 = 48
s32CSFStr_8    = 64
s32CTFstr_8    = 16




[BLC]
AEStrategyMode = 1
HistRatioSlope = 8
MaxHistOffset = 20

[DYNAMIC]
TotalNum_normal = 7
TotalNum_fast = 7

IntTime_normal = 2|20000|20000|20000|20000|40000|40000|
IntTime_fast = 2|2000|2000|5000|5000|40000|40000|

SysGain_normal = 1024|1024|1500|1500|3072|3072|16777216|
SysGain_fast = 1024|1024|2048|2048|5120|5120|16777216|

[HLC]
DCIEnable = 0
DCIBlackGain = 32
DCIContrastGain = 32
DCILightGain = 32
DRCEnable = 1
DRCManulEnable = 1
DRCStrengthTarget = 128
ExpCompensation = 16
WhiteDelayFrame = 0
BlackDelayFrame = 0
u8Speed = 32
HistRatioSlope = 128
MaxHistOffset = 6
u8Tolerance = 6
Saturation = 130,130,128,128,120,116,104,96,88,80,72,64,56,56,56,56
abEnLowLumaShoot = 0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1
u8SharpenD = 90,75,75,80,85,90,95,100,90,95,95,95,95,95,95,95
u8SharpenUd = 50,50,50,70,90,95,95,90,75,80,80,80,80,80,80,80
u8TextureNoiseThd = 0,2,4,6,6,12,24,30,0,0,0,0,0,0,0,0
u8EdgeNoiseThd = 2,4,8,16,25,11,12,0,0,0,0,0,0,0,0,0
u8OverShoot = 130,140,140,135,115,115,115,100,100,95,95,95,95,95,95,95 
u8UnderShoot = 220,210,210,190,170,150,130,110,100,95,95,95,95,95,95,95
gamma_0 = 0,120,220,310,390,470,540,610,670,730,786,842,894,944,994,1050,1096,1138,1178,1218,1254,1280,1314,1346,1378,1408,1438,1467,1493,1519,1543,1568,1592,1615,1638,1661,1683,1705,1726,1748,1769,1789,1810,1830,1849,1869,1888,1907,1926,1945,1963,1981,1999,2017,2034,2052,2069,2086,2102,2119,2136,2152,2168,2184,2200,2216,2231,2247,2262,2277,2292,2307,2322,2337,2351,2366,2380,2394,2408,2422,2436,2450,2464,2477,2491,2504,2518,2531,2544,2557,2570,
gamma_1 = 2583,2596,2609,2621,2634,2646,2659,2671,2683,2696,2708,2720,2732,2744,2756,2767,2779,2791,2802,2814,2825,2837,2848,2859,2871,2882,2893,2904,2915,2926,2937,2948,2959,2969,2980,2991,3001,3012,3023,3033,3043,3054,3064,3074,3085,3095,3105,3115,3125,3135,3145,3155,3165,3175,3185,3194,3204,3214,3224,3233,3243,3252,3262,3271,3281,3290,3300,3309,3318,3327,3337,3346,3355,3364,3373,3382,3391,3400,3409,3418,3427,3436,3445,3454,3463,3471,3480,3489,
gamma_2 = 3498,3506,3515,3523,3532,3540,3549,3557,3566,3574,3583,3591,3600,3608,3616,3624,3633,3641,3649,3657,3665,3674,3682,3690,3698,3706,3714,3722,3730,3738,3746,3754,3762,3769,3777,3785,3793,3801,3808,3816,3824,3832,3839,3847,3855,3862,3870,3877,3885,3892,3900,3907,3915,3922,3930,3937,3945,3952,3959,3967,3974,3981,3989,3996,4003,4010,4018,4025,4032,4039,4046,4054,4061,4068,4075,4082,4089,4095,
3DnrIsoCount = 9
3DnrIsoThresh = 100|200|400|800|1600|3200|6400|12100|24600|

;ISO = 100
s32YPKStr_0    = 0   
s32YSFStr_0    = 115
s32YTFStr_0    = 72
s32TFStrMax_0  = 13
s32YSFStrDlt_0 = 0
s32YTFStrDlt_0 = 0
s32YTFStrDl_0  = 0
s32YSmthStr_0  = 0
s32YSmthRat_0  = 16
s32YSFBriRat_0 = 24
s32CSFStr_0    = 32
s32CTFstr_0    = 0

;ISO = 200
s32YPKStr_1    = 0
s32YSFStr_1    = 125
s32YTFStr_1    = 78
s32TFStrMax_1  = 13
s32YSFStrDlt_1 = 0
s32YTFStrDlt_1 = 0
s32YTFStrDl_1  = 0
s32YSmthStr_1  = 0
s32YSmthRat_1  = 16
s32YSFBriRat_1 = 36
s32CSFStr_1    = 32
s32CTFstr_1    = 0

;ISO = 400
s32YPKStr_2    = 0
s32YSFStr_2    = 125
s32YTFStr_2    = 86
s32TFStrMax_2  = 13
s32YSFStrDlt_2 = 0
s32YTFStrDlt_2 = 0
s32YTFStrDl_2  = 0
s32YSmthStr_2  = 0
s32YSmthRat_2  = 16
s32YSFBriRat_2 = 36
s32CSFStr_2    = 64
s32CTFstr_2    = 0

;ISO = 800
s32YPKStr_3    = 0
s32YSFStr_3    = 125
s32YTFStr_3    = 86
s32TFStrMax_3  = 13
s32YSFStrDlt_3 = 0
s32YTFStrDlt_3 = 0
s32YTFStrDl_3  = 0
s32YSmthStr_3  = 0
s32YSmthRat_3  = 16
s32YSFBriRat_3 = 36
s32CSFStr_3    = 64
s32CTFstr_3    = 0

;ISO = 1600
s32YPKStr_4    = 0
s32YSFStr_4    = 125
s32YTFStr_4    = 96
s32TFStrMax_4  = 13
s32YSFStrDlt_4 = 0
s32YTFStrDlt_4 = 24
s32YTFStrDl_4  = 0
s32YSmthStr_4  = 0
s32YSmthRat_4  = 16
s32YSFBriRat_4 = 36
s32CSFStr_4    = 64
s32CTFstr_4    = 4

;ISO = 3200
s32YPKStr_5    = 0
s32YSFStr_5    = 125
s32YTFStr_5    = 96
s32TFStrMax_5  = 13
s32YSFStrDlt_5 = 0
s32YTFStrDlt_5 = 24
s32YTFStrDl_5  = 0
s32YSmthStr_5  = 0
s32YSmthRat_5  = 16
s32YSFBriRat_5 = 36
s32CSFStr_5    = 64
s32CTFstr_5    = 8

;ISO = 6400
s32YPKStr_6    = 0
s32YSFStr_6    = 125
s32YTFStr_6    = 96
s32TFStrMax_6  = 13
s32YSFStrDlt_6 = 0
s32YTFStrDlt_6 = 24
s32YTFStrDl_6  = 0
s32YSmthStr_6  = 0
s32YSmthRat_6  = 16
s32YSFBriRat_6 = 36
s32CSFStr_6    = 64
s32CTFstr_6    = 16

;ISO = 12100
s32YPKStr_7    = 0
s32YSFStr_7    = 130
s32YTFStr_7    = 100
s32TFStrMax_7  = 13
s32YSFStrDlt_7 = 8
s32YTFStrDlt_7 = 36
s32YTFStrDl_7  = 12
s32YSmthStr_7  = 0
s32YSmthRat_7  = 16
s32YSFBriRat_7 = 36
s32CSFStr_7    = 64
s32CTFstr_7    = 16

;ISO = 24600
s32YPKStr_8    = 0
s32YSFStr_8    = 135
s32YTFStr_8    = 105
s32TFStrMax_8  = 13
s32YSFStrDlt_8 = 8
s32YTFStrDlt_8 = 48
s32YTFStrDl_8  = 16
s32YSmthStr_8  = 0
s32YSmthRat_8  = 16
s32YSFBriRat_8 = 48
s32CSFStr_8    = 64
s32CTFstr_8    = 16

[IR]
ExpCount = 4
ExpThreshHtoL = 600000|1800000|4000000|7000000|
ExpThreshLtoH = 700000|2200000|5000000|8000000|
ExpCompensation = 50|48|38|32|
MaxHistOffset = 20|18|14|10|

u16HistRatioSlope = 64
BlackDelayFrame = 30
WhiteDelayFrame = 30

u8Tolerance = 3
u8Speed = 16
DCIEnable = 1
DCIBlackGain = 32
DCIContrastGain = 32
DCILightGain = 32
IRu16Slope = 0,0,0,0,1,1,2,2,3,3,3,3,3,3,3,3

abEnLowLumaShoot = 0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1
u8SharpenD = 90,75,75,80,85,90,95,100,90,95,95,95,95,95,95,95
u8SharpenUd = 50,50,50,70,90,95,95,90,75,80,80,80,80,80,80,80
u8TextureNoiseThd = 0,2,4,6,6,12,24,30,0,0,0,0,0,0,0,0
u8EdgeNoiseThd = 2,4,8,16,25,11,12,0,0,0,0,0,0,0,0,0
u8OverShoot = 130,140,140,135,115,115,115,100,100,95,95,95,95,95,95,95 
u8UnderShoot = 220,210,210,190,170,150,130,110,100,95,95,95,95,95,95,95
gamma_0 = 0,120,220,310,390,470,540,610,670,730,786,842,894,944,994,1050,1096,1138,1178,1218,1254,1280,1314,1346,1378,1408,1438,1467,1493,1519,1543,1568,1592,1615,1638,1661,1683,1705,1726,1748,1769,1789,1810,1830,1849,1869,1888,1907,1926,1945,1963,1981,1999,2017,2034,2052,2069,2086,2102,2119,2136,2152,2168,2184,2200,2216,2231,2247,2262,2277,2292,2307,2322,2337,2351,2366,2380,2394,2408,2422,2436,2450,2464,2477,2491,2504,2518,2531,2544,2557,2570,
gamma_1 = 2583,2596,2609,2621,2634,2646,2659,2671,2683,2696,2708,2720,2732,2744,2756,2767,2779,2791,2802,2814,2825,2837,2848,2859,2871,2882,2893,2904,2915,2926,2937,2948,2959,2969,2980,2991,3001,3012,3023,3033,3043,3054,3064,3074,3085,3095,3105,3115,3125,3135,3145,3155,3165,3175,3185,3194,3204,3214,3224,3233,3243,3252,3262,3271,3281,3290,3300,3309,3318,3327,3337,3346,3355,3364,3373,3382,3391,3400,3409,3418,3427,3436,3445,3454,3463,3471,3480,3489,
gamma_2 = 3498,3506,3515,3523,3532,3540,3549,3557,3566,3574,3583,3591,3600,3608,3616,3624,3633,3641,3649,3657,3665,3674,3682,3690,3698,3706,3714,3722,3730,3738,3746,3754,3762,3769,3777,3785,3793,3801,3808,3816,3824,3832,3839,3847,3855,3862,3870,3877,3885,3892,3900,3907,3915,3922,3930,3937,3945,3952,3959,3967,3974,3981,3989,3996,4003,4010,4018,4025,4032,4039,4046,4054,4061,4068,4075,4082,4089,4095,

expweight_0  =1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
expweight_1  =1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
expweight_2  =1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
expweight_3  =1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
expweight_4  =1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,
expweight_5  =1,1,1,1,1,2,3,3,3,3,3,1,1,1,1,1,1,
expweight_6  =1,1,1,1,2,3,4,4,4,4,4,3,2,1,1,1,1,
expweight_7  =1,1,1,2,3,4,4,4,4,4,4,4,3,2,1,1,1,
expweight_8  =1,1,2,3,4,5,5,5,5,5,5,5,4,3,2,1,1,
expweight_9  =1,1,2,3,4,5,5,5,5,5,5,5,4,3,2,1,1,
expweight_10 =1,1,2,3,4,4,4,4,4,4,4,4,4,3,2,1,1,
expweight_11 =1,1,2,3,4,4,4,4,4,4,4,4,4,3,2,1,1,
expweight_12 =1,1,1,1,2,3,3,3,3,3,3,3,2,1,1,1,1,
expweight_13 =1,1,1,1,1,2,2,2,2,2,2,2,1,1,1,1,1,
expweight_14 =1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,

3DnrIsoCount = 9
3DnrIsoThresh = 100|200|400|800|1600|3200|6400|12100|24600|

;ISO = 100
s32YPKStr_0    = 0   
s32YSFStr_0    = 115
s32YTFStr_0    = 72
s32TFStrMax_0  = 13
s32YSFStrDlt_0 = 0
s32YTFStrDlt_0 = 0
s32YTFStrDl_0  = 0
s32YSmthStr_0  = 0
s32YSmthRat_0  = 16
s32YSFBriRat_0 = 24
s32CSFStr_0    = 32
s32CTFstr_0    = 0

;ISO = 200
s32YPKStr_1    = 0
s32YSFStr_1    = 125
s32YTFStr_1    = 78
s32TFStrMax_1  = 13
s32YSFStrDlt_1 = 0
s32YTFStrDlt_1 = 0
s32YTFStrDl_1  = 0
s32YSmthStr_1  = 0
s32YSmthRat_1  = 16
s32YSFBriRat_1 = 36
s32CSFStr_1    = 32
s32CTFstr_1    = 0

;ISO = 400
s32YPKStr_2    = 0
s32YSFStr_2    = 125
s32YTFStr_2    = 86
s32TFStrMax_2  = 13
s32YSFStrDlt_2 = 0
s32YTFStrDlt_2 = 0
s32YTFStrDl_2  = 0
s32YSmthStr_2  = 0
s32YSmthRat_2  = 16
s32YSFBriRat_2 = 36
s32CSFStr_2    = 64
s32CTFstr_2    = 0

;ISO = 800
s32YPKStr_3    = 0
s32YSFStr_3    = 125
s32YTFStr_3    = 86
s32TFStrMax_3  = 13
s32YSFStrDlt_3 = 0
s32YTFStrDlt_3 = 0
s32YTFStrDl_3  = 0
s32YSmthStr_3  = 0
s32YSmthRat_3  = 16
s32YSFBriRat_3 = 36
s32CSFStr_3    = 64
s32CTFstr_3    = 0

;ISO = 1600
s32YPKStr_4    = 0
s32YSFStr_4    = 125
s32YTFStr_4    = 96
s32TFStrMax_4  = 13
s32YSFStrDlt_4 = 0
s32YTFStrDlt_4 = 24
s32YTFStrDl_4  = 0
s32YSmthStr_4  = 0
s32YSmthRat_4  = 16
s32YSFBriRat_4 = 36
s32CSFStr_4    = 64
s32CTFstr_4    = 4

;ISO = 3200
s32YPKStr_5    = 0
s32YSFStr_5    = 125
s32YTFStr_5    = 96
s32TFStrMax_5  = 13
s32YSFStrDlt_5 = 0
s32YTFStrDlt_5 = 24
s32YTFStrDl_5  = 0
s32YSmthStr_5  = 0
s32YSmthRat_5  = 16
s32YSFBriRat_5 = 36
s32CSFStr_5    = 64
s32CTFstr_5    = 8

;ISO = 6400
s32YPKStr_6    = 0
s32YSFStr_6    = 125
s32YTFStr_6    = 96
s32TFStrMax_6  = 13
s32YSFStrDlt_6 = 0
s32YTFStrDlt_6 = 24
s32YTFStrDl_6  = 0
s32YSmthStr_6  = 0
s32YSmthRat_6  = 16
s32YSFBriRat_6 = 36
s32CSFStr_6    = 64
s32CTFstr_6    = 16

;ISO = 12100
s32YPKStr_7    = 0
s32YSFStr_7    = 130
s32YTFStr_7    = 100
s32TFStrMax_7  = 13
s32YSFStrDlt_7 = 8
s32YTFStrDlt_7 = 36
s32YTFStrDl_7  = 12
s32YSmthStr_7  = 0
s32YSmthRat_7  = 16
s32YSFBriRat_7 = 36
s32CSFStr_7    = 64
s32CTFstr_7    = 16

;ISO = 24600
s32YPKStr_8    = 0
s32YSFStr_8    = 135
s32YTFStr_8    = 105
s32TFStrMax_8  = 13
s32YSFStrDlt_8 = 8
s32YTFStrDlt_8 = 48
s32YTFStrDl_8  = 16
s32YSmthStr_8  = 0
s32YSmthRat_8  = 16
s32YSFBriRat_8 = 48
s32CSFStr_8    = 64
s32CTFstr_8    = 16

[DRC]
DRCEnable = 1
DRCManulEnable = 0
DRCStrengthTarget = 128
DRCu16BrightGainLmt = 127
DRCu16DarkGainLmtC = 127
DRCu16DarkGainLmtY = 127
DRCu8Asymmetry = 2
DRCu8LocalMixingBrigtht = 45
DRCu8LocalMixingDark = 45
DRCu8LocalMixingThres = 2
DRCu8RangeVar = 0
DRCu8SecondPole = 180
DRCu8SpatialVar = 10
DRCu8Stretch = 54





